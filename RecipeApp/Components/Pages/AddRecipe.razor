@page "/addrecipe"
@inject IAdminCreateRecipeService _iAdminCreateRecipeService
@inject IProduceRepository _iProduceRepository
@rendermode InteractiveServer

<h3>Tilføj ny opskrift</h3>

<div class="lists-container">
	<div>
		<h5>Navn på opskrift</h5>
		<div class="mb-auto">
			<TextInput Disabled="@tbDisabled" @bind-Value="@tbRecipeName" />
		</div>

		<h5>Opskriftens URL</h5>
		<div>
			<TextInput @onfocusout=" () => ValidateURL(tbRecipeURL)" Placeholder="Indtast først opskriftens URL." @bind-Value= "@tbRecipeURL" />
		</div>

		<h5>Tilberedningstid i minutter</h5>
		<div>
			<NumberInput TValue="int?" Disabled="@tbDisabled" EnableMinMax="true" Min="15" Max="600" @bind-Value = "@tbRecipeCookTime" />
			<span class="form-text">Indtast et tal mellem 15 og 600</span>
		</div>
	</div>

	<div>
		<h5>Ingredienser</h5>
		<div>
			<Dropdown Disabled="@tbDisabled" Color="DropdownColor.Secondary">
				<DropdownToggleButton>Tilføj ingredienser...</DropdownToggleButton>
				<DropdownMenu class="produce-dropdown">
					@foreach (var produce in listOfProduce){
						<DropdownItem @onclick="() => AddProduce(produce)">@produce.Name</DropdownItem>
					}
				</DropdownMenu>
			</Dropdown>
		</div>
		<div>
			@foreach (var produce in addedProduces){
				<Button Color="ButtonColor.Primary" Outline="true" @onclick="() => RemoveProduce(produce)"> @produce.Name </Button>
			}
		</div>
	</div>
</div>
<div class="center-items">
	@if(alertMessage == "urlExists"){
		<Alert Color="AlertColor.Danger"><Icon Name="IconName.ExclamationTriangleFill"></Icon> Denne opskrift findes allerede i databasen!</Alert>
	}
	@if(alertMessage == "urlEmpty"){
		<Alert Color="AlertColor.Danger"><Icon Name="IconName.ExclamationTriangleFill"></Icon> Indtast venligst opskriftens URL!</Alert>
	}
	@if(alertMessage == "urlInvalid"){
		<Alert Color="AlertColor.Danger"><Icon Name="IconName.ExclamationTriangleFill"></Icon> Denne URL er ugyldig!</Alert>
	}
	@if(alertMessage == "urlValid"){
		<Alert Color="AlertColor.Success"><Icon Name="IconName.CheckCircleFill"></Icon> Denne URL er gyldig!</Alert>
	}
	<Button Disabled="@tbDisabled" Color="ButtonColor.Success">Tilføj opskrift</Button>
</div>

<style>
	.lists-container {
	display: flex;
	grid-template-columns: 1fr 1fr;
	gap: 10px;
	}

	.lists-container div {
	flex: 1;
	padding: 10px;
	border-radius: 5px;
	}

	.produce-dropdown {
	max-height: 175px;
	overflow-y: scroll;
	}

	.center-items {
	text-align: center;
	}
</style>

@code {
	private string? tbRecipeName = null;
	private string? tbRecipeURL = null;
	private int? tbRecipeCookTime = null;
	private string? alertMessage = null;
	private bool tbDisabled = true;

	private void Enable() => tbDisabled = false;
	private void Disable() => tbDisabled = true;

	List<Produce>? listOfProduce;
	List<Produce>? addedProduces;

	protected override void OnInitialized()
	{
		listOfProduce = _iAdminCreateRecipeService.AllProduceWhenAdminCreateRecipe;
		addedProduces = _iAdminCreateRecipeService.SelectedProduceWhenAdminCreateRecipe;
	}

	private void AddProduce(Produce produce){
		_iAdminCreateRecipeService.AddProduceToNewRecipe(produce);
		listOfProduce = _iAdminCreateRecipeService.AllProduceWhenAdminCreateRecipe;
		addedProduces = _iAdminCreateRecipeService.SelectedProduceWhenAdminCreateRecipe;
	}

	private void RemoveProduce(Produce produce)
	{
		_iAdminCreateRecipeService.RemoveProduceFromNewRecipe(produce);
		listOfProduce = _iAdminCreateRecipeService.AllProduceWhenAdminCreateRecipe;
		addedProduces = _iAdminCreateRecipeService.SelectedProduceWhenAdminCreateRecipe;
	}

	private void ValidateURL(string tbRecipeURL){
		alertMessage = _iAdminCreateRecipeService.ValidateURL(tbRecipeURL);
		if (alertMessage == "urlValid"){
			tbDisabled = false;
		}
		if (alertMessage == "urlExists" || alertMessage == "urlInvalid" || alertMessage == "urlEmpty"){
			tbDisabled = true;
		}
	}

	// private void AddRemoveProduce(Produce produce){
	// 	_iAdminCreateRecipeService.AddRemoveProduceToNewRecipe(produce);
	// 	listOfProduce = _iAdminCreateRecipeService.AllProduceWhenAdminCreateRecipe;
	// 	addedProduces = _iAdminCreateRecipeService.SelectedProduceWhenAdminCreateRecipe;
	// }
}
