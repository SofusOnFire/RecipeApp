@page "/"
@inject IUserProduceService userProduceService
@inject IProduceRepository _iProduceRepository
@inject IProduceService _iProduceService
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div class="lists-container">
	<div>
		<h4>Your Produce</h4>
		<ul>
			@foreach (var produce in yourProduce)
			{
				<li style="display: flex; justify-content: space-between; align-items: center;" @onclick="() => MoveProduceBetweenLists(produce)">
					@produce.Name
					<img src="/img/trashcan.svg" />
				</li>
			}
		</ul>
	</div>
	<div>
		<h4>All Produce</h4>
		<ul>
			@foreach (var produce in listOfProduce)
			{
				<li @onclick=" () => MoveProduceBetweenLists(produce)">@produce.Name</li>
			}
		</ul>
	</div>
</div>

<style>
	.lists-container {
	display: flex;
	grid-template-columns: 1fr 1fr;
	gap: 10px;
	}

	.lists-container div {
	flex: 1;
	border: 1px solid #ccc;
	padding: 10px;
	border-radius: 5px;
	background-color: #f9f9f9;
	}

	li {
	cursor: pointer;
	padding: 5px;
	list-style: none;
	}

	li:hover {
	background-color: #ddd;
	transform: scale(1.02);
	border-radius: 10px;
	}
</style>

@code {

	List<Produce>? listOfProduce;
	List<Produce>? yourProduce;


	protected override void OnInitialized()
	{
		yourProduce = userProduceService.UserProduceList;
		listOfProduce = _iProduceRepository.GetAllProduce();
	}

	private void HandleChange(){
		yourProduce = userProduceService.UserProduceList;
		listOfProduce = _iProduceService.CompareAndGetProduceList(yourProduce);
	}

	private void MoveProduceBetweenLists(Produce produce)
	{
		userProduceService.MoveBetweenList(produce, listOfProduce);
		this.HandleChange();
	}
}