@page "/weather"
@inject IRecipeService _iRecipeService
@rendermode InteractiveServer

<PageTitle>Weather</PageTitle>

<h1>Opskrifter</h1>

<p>Hvilke slags opskrifter vil du se?</p>

<button type="button" id="allRecipes" @onclick="ShowAllRecipes">Alle opskrifter</button>
<button type="button" id="userProduceRecipes" @onclick="ShowUserProduceRecipes">Opskrifter jeg kan lave</button>

<div hidden=@hideRecipeList id="recipeList">
    <ul>
        @foreach (var recipe in listOfRecipes)
        {
            <li><Tooltip Title="@GetRecipeProduces(recipe)" Placement="TooltipPlacement.Top"><a href="@recipe.URL">@recipe.RecipeName | tilberedningstid: @recipe.CookTime minutter</a></Tooltip></li>
        }
    </ul>
</div>

<div hidden=@hideMatchedRecipeList id="matchedRecipeList">
    <ul>
        @foreach (var recipe in listOfMatchedRecipes)
        {
            <li><Tooltip Title="@GetRecipeProduces(recipe)" Placement="TooltipPlacement.Top"><a href="@recipe.URL">@recipe.RecipeName | tilberedningstid: @recipe.CookTime minutter</a></Tooltip></li>
        }
    </ul>
</div>

@code {

    private IEnumerable<Recipe> listOfRecipes;
    private IEnumerable<Recipe> listOfMatchedRecipes;

    bool hideRecipeList = true;
    bool hideMatchedRecipeList = true;

    protected override void OnInitialized()
    {
        listOfRecipes = _iRecipeService.GetAllRecipesFromDatabase();
        listOfMatchedRecipes = _iRecipeService.FindRecipes();
    }

    private void ShowAllRecipes(){
        hideRecipeList = !hideRecipeList;
        hideMatchedRecipeList = true;
    }

    private void ShowUserProduceRecipes(){
        hideMatchedRecipeList = !hideMatchedRecipeList;
        hideRecipeList = true;
    }

    private string GetRecipeProduces(Recipe recipe){
        return _iRecipeService.GetRecipeProduceLines(recipe);
    }

}
